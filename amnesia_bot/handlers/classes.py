from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from keyboards.classes import get_classes_keyboard, get_class_confirmation_keyboard
from keyboards.races import get_races_keyboard
from states.game_states import GameStates

router = Router()

CLASS_INFO = {
    "warrior": {
        "name": "‚öîÔ∏è –í–æ–∏–Ω",
        "stats": {"str": 3, "int": 1, "agi": 2, "end": 3},
        "desc": (
            "–ú–∞—Å—Ç–µ—Ä –±–ª–∏–∂–Ω–µ–≥–æ –±–æ—è\n\n"
            "üí™ –°–∏–ª–∞: +3\n"
            "üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: +1\n"
            "üèÉ –õ–æ–≤–∫–æ—Å—Ç—å: +2\n"
            "üõ°Ô∏è –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: +3\n\n"
            "–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –æ—Ä—É–∂–∏–µ: –†–∂–∞–≤—ã–π –º–µ—á"
        ),
        "weapon": "‚öîÔ∏è –†–∂–∞–≤—ã–π –º–µ—á"
    },
    "mage": {
        "name": "üîÆ –ú–∞–≥",
        "stats": {"int": 3, "str": 1, "agi": 1, "end": 2},
        "desc": (
            "–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –º–∞–≥–∏–∏\n\n"
            "üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: +3\n"
            "üí™ –°–∏–ª–∞: +1\n"
            "üèÉ –õ–æ–≤–∫–æ—Å—Ç—å: +1\n"
            "üõ°Ô∏è –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: +2\n\n"
            "–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –æ—Ä—É–∂–∏–µ: –ü—Ä–æ—Å—Ç–æ–π –ø–æ—Å–æ—Ö"
        ),
        "weapon": "üîÆ –ü—Ä–æ—Å—Ç–æ–π –ø–æ—Å–æ—Ö"
    },
    "ranger": {
        "name": "üèπ –°–ª–µ–¥–æ–ø—ã—Ç",
        "stats": {"agi": 3, "str": 2, "int": 1, "end": 2},
        "desc": (
            "–ú–µ—Ç–∫–∏–π —Å—Ç—Ä–µ–ª–æ–∫\n\n"
            "üèÉ –õ–æ–≤–∫–æ—Å—Ç—å: +3\n"
            "üí™ –°–∏–ª–∞: +2\n"
            "üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: +1\n"
            "üõ°Ô∏è –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: +2\n\n"
            "–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –æ—Ä—É–∂–∏–µ: –î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –ª—É–∫"
        ),
        "weapon": "üèπ –î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –ª—É–∫"
    }
}

@router.callback_query(F.data == "back_to_classes")
async def back_to_classes(callback: CallbackQuery, state: FSMContext):
    await state.set_state(GameStates.choosing_class)
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –∫–ª–∞—Å—Å:",
        reply_markup=get_classes_keyboard()
    )
    await callback.answer()

@router.callback_query(F.data.startswith("class_"), GameStates.choosing_class)
async def select_class(callback: CallbackQuery):
    class_type = callback.data.split("_")[1]
    info = CLASS_INFO[class_type]
    await callback.message.edit_text(
        info['desc'],
        reply_markup=get_class_confirmation_keyboard(class_type)
    )
    await callback.answer()

@router.callback_query(F.data.startswith("confirm_class_"), GameStates.choosing_class)
async def confirm_class(callback: CallbackQuery, state: FSMContext):
    class_type = callback.data.split("_")[2]
    await state.update_data(
        character_class=class_type,
        weapon=CLASS_INFO[class_type]["weapon"],
        kills=0
    )
    await state.set_state(GameStates.choosing_name)
    await callback.message.edit_text(
        "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –∏–º—è —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–æ—Ç 3 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤):"
    )
    await callback.answer()