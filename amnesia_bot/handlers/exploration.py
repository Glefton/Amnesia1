from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from keyboards.exploration import get_exploration_keyboard
from keyboards.city_keyboards import get_city_keyboard
from states.game_states import GameStates

router = Router()

@router.message(Command("explore"))
async def explore_command(message: Message, state: FSMContext):
    await message.answer(
        "–í—ã –∏—Å—Å–ª–µ–¥—É–µ—Ç–µ –æ–∫—Ä–µ—Å—Ç–Ω–æ—Å—Ç–∏:",
        reply_markup=get_exploration_keyboard()
    )
    await state.set_state(GameStates.exploring)

@router.callback_query(F.data == "enter_city")
async def enter_city(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    race = data.get('race', 'human')
    
    city_descriptions = {
        "human": "üè∞ –í—ã –≤—Ö–æ–¥–∏—Ç–µ –≤ —à—É–º–Ω—ã–π —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –≥–æ—Ä–æ–¥ –ê—Å—Ç–µ—Ä–∏—é...",
        "elf": "üå≥ –í—ã –ø–æ–ø–∞–¥–∞–µ—Ç–µ –≤ —É—Ç–æ–ø–∞—é—â–∏–π –≤ –∑–µ–ª–µ–Ω–∏ —ç–ª—å—Ñ–∏–π—Å–∫–∏–π –ò–ª–ª–∏—Ä–∏–∞–Ω...",
        "orc": "üî• –í—ã –≤—Ö–æ–¥–∏—Ç–µ –≤ –¥—ã–º—è—â–∏–π—Å—è –æ—Ä–∫—Å–∫–∏–π –ª–∞–≥–µ—Ä—å –ì—Ä–∞–∫'–¢–æ—Ä...",
        "lich": "üíÄ –í—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –≤–æ—Ä–æ—Ç–∞ –ù–µ–∫—Ä–æ–ø–æ–ª–∏—Å–∞..."
    }
    
    await callback.message.answer(
        city_descriptions[race],
        reply_markup=get_city_keyboard()
    )
    await state.set_state(GameStates.in_city)
    await callback.answer()