from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from keyboards.races import get_races_keyboard, get_race_confirmation_keyboard
from keyboards.classes import get_classes_keyboard
from states.game_states import GameStates

router = Router()

RACE_INFO = {
    "human": {
        "name": "üë® –ß–µ–ª–æ–≤–µ–∫",
        "stats": {"int": 2, "str": 2, "agi": 2, "end": 2},
        "desc": (
            "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ä–∞—Å–∞ –±–µ–∑ —Å–ª–∞–±–æ—Å—Ç–µ–π\n\n"
            "üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: 2\n"
            "üí™ –°–∏–ª–∞: 2\n"
            "üèÉ –õ–æ–≤–∫–æ—Å—Ç—å: 2\n"
            "üõ°Ô∏è –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: 2\n\n"
            "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏"
        ),
        "intro": "–í—ã –æ—á–Ω—É–ª–∏—Å—å –Ω–∞ –æ–∫—Ä–∞–∏–Ω–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞..."
    },
    "elf": {
        "name": "üßù –≠–ª—å—Ñ", 
        "stats": {"int": 3, "str": 1, "agi": 3, "end": 1},
        "desc": (
            "–ú–∞—Å—Ç–µ—Ä–∞ –º–∞–≥–∏–∏ –∏ —Å—Ç—Ä–µ–ª—å–±—ã\n\n"
            "üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: 3\n"
            "üí™ –°–∏–ª–∞: 1\n"
            "üèÉ –õ–æ–≤–∫–æ—Å—Ç—å: 3\n"
            "üõ°Ô∏è –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: 1\n\n"
            "–ò–¥–µ–∞–ª—å–Ω—ã –¥–ª—è –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –∫–ª–∞—Å—Å–æ–≤"
        ),
        "intro": "–í—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –≤ —Å–æ–∑–Ω–∞–Ω–∏–µ –≤ —Å–≤—è—â–µ–Ω–Ω–æ–π —ç–ª—å—Ñ–∏–π—Å–∫–æ–π —Ä–æ—â–µ..."
    },
    "orc": {
        "name": "üëπ –û—Ä–∫",
        "stats": {"int": 1, "str": 3, "agi": 1, "end": 3},
        "desc": (
            "–ú–æ–≥—É—á–∏–µ –≤–æ–∏–Ω—ã\n\n"
            "üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: 1\n"
            "üí™ –°–∏–ª–∞: 3\n"
            "üèÉ –õ–æ–≤–∫–æ—Å—Ç—å: 1\n"
            "üõ°Ô∏è –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: 3\n\n"
            "–ù–µ—É–¥–µ—Ä–∂–∏–º—ã–µ –≤ –±–ª–∏–∂–Ω–µ–º –±–æ—é"
        ),
        "intro": "–í—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç–µ –≥–ª–∞–∑–∞ –≤ –¥—ã–º—è—â–∏—Ö—Å—è –∑–µ–º–ª—è—Ö –æ—Ä–∫–æ–≤..."
    },
    "lich": {
        "name": "üíÄ –õ–∏—á",
        "stats": {"int": 4, "str": 1, "agi": 1, "end": 2},
        "desc": (
            "–ü–æ–≤–µ–ª–∏—Ç–µ–ª–∏ –º–∞–≥–∏–∏ —Å–º–µ—Ä—Ç–∏\n\n"
            "üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç: 4\n"
            "üí™ –°–∏–ª–∞: 1\n"
            "üèÉ –õ–æ–≤–∫–æ—Å—Ç—å: 1\n"
            "üõ°Ô∏è –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: 2\n\n"
            "–ú–æ—â–Ω—ã–µ –∑–∞–∫–ª–∏–Ω–∞—Ç–µ–ª–∏"
        ),
        "intro": "–¢—å–º–∞ —Ä–∞—Å—Å–µ–∏–≤–∞–µ—Ç—Å—è, –∏ –≤—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ, —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –Ω–µ–∫—Ä–æ–ø–æ–ª–∏—Å–µ..."
    }
}

@router.callback_query(F.data == "back_to_races")
async def back_to_races(callback: CallbackQuery, state: FSMContext):
    await state.set_state(GameStates.choosing_race)
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ä–∞—Å—É:",
        reply_markup=get_races_keyboard()
    )
    await callback.answer()

@router.callback_query(F.data.startswith("race_"), GameStates.choosing_race)
async def select_race(callback: CallbackQuery):
    race = callback.data.split("_")[1]
    info = RACE_INFO[race]
    await callback.message.edit_text(
        info['desc'],
        reply_markup=get_race_confirmation_keyboard(race)
    )
    await callback.answer()

@router.callback_query(F.data.startswith("confirm_race_"), GameStates.choosing_race)
async def confirm_race(callback: CallbackQuery, state: FSMContext):
    race = callback.data.split("_")[2]
    await state.update_data(race=race)
    await state.set_state(GameStates.choosing_class)
    await callback.message.edit_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞—Å—É: {RACE_INFO[race]['name']}\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∫–ª–∞—Å—Å:",
        reply_markup=get_classes_keyboard()
    )
    await callback.answer()